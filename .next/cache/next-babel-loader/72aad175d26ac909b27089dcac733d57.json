{"ast":null,"code":"// import Fetch from 'isomorphic-unfetch';\n// // //var db = require(\"../models\");\n// import stocks from \"./stockArray\";\n// // //const eodApi = require('eodhistoricaldata-api');\n// // const stocks = require(\"./stockArray\");\n// // //const axios = require(\"axios\");\n// // const router = require(\"express\").Router();\n// Index.getInitialProps = async function() {\n//     for (var i = 0; i < stocks.length; i++) {\n//   const res = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\");\n//   //const res = await Fetch('https://eodhistoricaldata.com/api/fundamentals/AAPL.US?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX');\n//   const data = await res.json();\n//   return {\n//     stockapi: data\n//   };\n//     }\n// }\n// export default stockapi;\n// Index.getInitialProps = async function() {\n//     var URLName = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\";\n//     const res = await Fetch('https://eodhistoricaldata.com/api/fundamentals/AAPL.US?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX');\n//     const data = await res.json();\n//     return {\n//       stockapi: data\n//     };\n// for (var i = 0; i < stocks.length; i++) {\n//     //  console.log(stocks[i])\n//     //await getAllStockData(stocks[i]);\n//     var URLName = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\";\n//     var URLCash = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n//     var URLEbit = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Income_Statement::quarterly\";\n//     var URLDebt = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n//     var URLMarketCapitalization = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::MarketCapitalization\";\n//     var URLStockPrice = \"https://eodhistoricaldata.com/api/real-time/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&fmt=json&filter=close\";\n//     //var URLPreferredShares = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n//     await axios.get(URLName)\n//       .then(async function (nameResponse) {\n//         console.log(\"Name Res: \" + nameResponse);\n//         await axios.get(URLCash)\n//           .then(async function (cashResponse) {\n//             await axios.get(URLEbit)\n//               .then(async function (EbitResponse) {\n//                 await axios.get(URLDebt)\n//                   .then(async function (debtData) {\n//                     await axios.get(URLMarketCapitalization)\n//                       .then(async function (MarketCapitalizationResponse) {\n//                         await axios.get(URLStockPrice)\n//                           .then(function (stockPriceData) {\n//                             // await axios.get(URLPreferredShares)\n//                             //   .then(function (preferredData) {\n//                             //-----------Name of Company-------------------------//\n//                             //console.log(\"Derek, here is the API Res\");\n//                             // console.log(\"Name of Company: \" + nameResponse.data);\n//                             var companyName = nameResponse.data;\n//                             var stockPrice = stockPriceData.data;\n//                             // console.log(\"stocPrice: \", stockPrice);\n//                             // var stockDataPackageQ12019 = [];\n//                             // var stockDataFinal = [];\n//                             //--------------Cash-------------------------------//\n//                             const cashData = [];\n//                             for (const key in cashResponse.data) {\n//                               //dates2.push(key);\n//                               cashData.push([cashResponse.data[key].cash]);\n//                             }\n//                             const cashValue1 = cashData.slice(0, 1);\n//                             const cashValue = cashValue1[0][0];\n//                             //console.log(\"Cash: \" + cashValue)\n//                             //---------------shortlongTermDebt + longTermDebt------------------//\n//                             //  const xyz2 = dates2.slice(0, 4);\n//                             //const SLTDValues = [];\n//                             const LTDValues = [];\n//                             // for (const key in debtData.data) {\n//                             //   //dates2.push(key);\n//                             //   SLTDValues.push([debtData.data[key].shortlongTermDebt]);\n//                             // }\n//                             for (const key in debtData.data) {\n//                               LTDValues.push([debtData.data[key].longTermDebt]);\n//                             }\n//                             // const debtSLTD = SLTDValues.slice(0, 1);\n//                             const debtLTD1 = LTDValues.slice(0, 1);\n//                             const debtLTD = debtLTD1[0][0];\n//                             //console.log(\"ShortTerm + LongTerm Debt: \" + debtSLTD);\n//                             //console.log(\"LongTerm Debt Only: \" + debtLTD);\n//                             // if (debtSLTD === \"undefined\" || null) {\n//                             // }\n//                             //---------------EBIT----------------------------------//\n//                             const dates = [];\n//                             const ebitValues = [];\n//                             for (const key in EbitResponse.data) {\n//                               dates.push(key);\n//                               ebitValues.push([EbitResponse.data[key].ebit]);\n//                             }\n//                             // const xyz = dates.slice(0, 1);\n//                             const EV = ebitValues.slice(0, 4);\n//                             var annualEbit = +EV[0] + +EV[1] + +EV[2] + +EV[3];\n//                             //console.log(\"Annual EBIT: \" + annualEbit)\n//                             //---------------Preferred Shares--------------------------------//\n//                             // const preferredValues = [];\n//                             // for (const key in preferredData.data) {\n//                             //   preferredValues.push([preferredData.data[key].preferredStockTotalEquity]);\n//                             // }\n//                             // // const debtSLTD = SLTDValues.slice(0, 1);\n//                             // const preferredSliced = preferredValues.slice(0, 1);\n//                             // var preferredStockTotalEquity = preferredSliced[0][0];\n//                             // if (preferredStockTotalEquity == null) {\n//                             //   preferredStockTotalEquity = 0;\n//                             // }\n//                             // if(value) {\n//                             //   preferredStockTotalEquity;\n//                             // }\n//                             //stockDataPackageQ12019[0].preferredStockTotalEquity\n//                             //Needs to go below stockDataFinal\n//                             // if (stockDataFinal[6] == null) {\n//                             //   stockDataFinal[6] = 0;\n//                             // }\n//                             //----------------Market Capitalization---------------------------//\n//                             // const MarketCapitalizationData = [];\n//                             // for (const key in MarketCapitalizationResponse.data) {\n//                             //   //dates2.push(key);\n//                             //   MarketCapitalizationData.push([MarketCapitalizationResponse.data[key].commonStock]);\n//                             // }\n//                             //const MarketCapitalization = MarketCapitalizationData.slice(0, 1);\n//                             var MarketCapitalization = MarketCapitalizationResponse.data;\n//                             console.log(\"----Stock data baybeee!-----\")\n//                             //console.log(\"----Array Len:\"+stockDataPackageQ12019.length+\"-----\")\n//                             //console.log(stockDataPackageQ12019[0].cashValue)\n//                             // stockDataFinal.push(\n//                             //   stockDataPackageQ12019[0].companyName,\n//                             //   stockDataPackageQ12019[0].cashValue,\n//                             //   stockDataPackageQ12019[0].debtLTD,\n//                             //   stockDataPackageQ12019[0].annualEbit,\n//                             //   stockDataPackageQ12019[0].MarketCapitalization,\n//                             //   stockDataPackageQ12019[0].stockPrice,\n//                             // )\n//                             console.log(companyName);\n//                             //console.log(typeof(companyName));\n//                             var enterpriseValue = [(+debtLTD + +MarketCapitalization) + +cashValue];\n//                             var symbol = stocks[i];\n//                             var finalRatioEvEbit = parseFloat((enterpriseValue / annualEbit)).toFixed(2);\n//                             console.log(\"EV/EBIT: \", finalRatioEvEbit);\n//                             console.log(annualEbit);\n//                             console.log(\"stockPrice: \", stockPrice);\n//                             db.Report.create({\n//                               companyName: companyName,\n//                               symbol: symbol,\n//                               stockPrice: stockPrice,\n//                               finalRatioEvEbit: finalRatioEvEbit\n//                             })\n//                             // .then(function (dbData) {\n//                             //   //console.log(dbData);\n//                             //  console.log(\"Hi World\")\n//                             // });\n//                           });\n//                       });\n//                   });\n//               });\n//           });\n//       });\n//   }\n// }","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/models/apiPull.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import Fetch from 'isomorphic-unfetch';\n// // //var db = require(\"../models\");\n// import stocks from \"./stockArray\";\n// // //const eodApi = require('eodhistoricaldata-api');\n// // const stocks = require(\"./stockArray\");\n// // //const axios = require(\"axios\");\n// // const router = require(\"express\").Router();\n\n\n\n// Index.getInitialProps = async function() {\n//     for (var i = 0; i < stocks.length; i++) {\n//   const res = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\");\n//   //const res = await Fetch('https://eodhistoricaldata.com/api/fundamentals/AAPL.US?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX');\n//   const data = await res.json();\n\n//   return {\n//     stockapi: data\n//   };\n//     }\n\n\n// }\n\n// export default stockapi;\n\n\n\n// Index.getInitialProps = async function() {\n//     var URLName = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\";\n//     const res = await Fetch('https://eodhistoricaldata.com/api/fundamentals/AAPL.US?api_token=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX');\n//     const data = await res.json();\n  \n//     return {\n//       stockapi: data\n//     };\n\n\n\n\n// for (var i = 0; i < stocks.length; i++) {\n//     //  console.log(stocks[i])\n//     //await getAllStockData(stocks[i]);\n//     var URLName = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\";\n//     var URLCash = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n//     var URLEbit = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Income_Statement::quarterly\";\n//     var URLDebt = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n//     var URLMarketCapitalization = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::MarketCapitalization\";\n//     var URLStockPrice = \"https://eodhistoricaldata.com/api/real-time/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&fmt=json&filter=close\";\n//     //var URLPreferredShares = \"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\";\n\n//     await axios.get(URLName)\n//       .then(async function (nameResponse) {\n//         console.log(\"Name Res: \" + nameResponse);\n//         await axios.get(URLCash)\n//           .then(async function (cashResponse) {\n//             await axios.get(URLEbit)\n//               .then(async function (EbitResponse) {\n//                 await axios.get(URLDebt)\n//                   .then(async function (debtData) {\n//                     await axios.get(URLMarketCapitalization)\n//                       .then(async function (MarketCapitalizationResponse) {\n//                         await axios.get(URLStockPrice)\n//                           .then(function (stockPriceData) {\n//                             // await axios.get(URLPreferredShares)\n//                             //   .then(function (preferredData) {\n//                             //-----------Name of Company-------------------------//\n//                             //console.log(\"Derek, here is the API Res\");\n//                             // console.log(\"Name of Company: \" + nameResponse.data);\n//                             var companyName = nameResponse.data;\n//                             var stockPrice = stockPriceData.data;\n//                             // console.log(\"stocPrice: \", stockPrice);\n//                             // var stockDataPackageQ12019 = [];\n//                             // var stockDataFinal = [];\n//                             //--------------Cash-------------------------------//\n//                             const cashData = [];\n//                             for (const key in cashResponse.data) {\n//                               //dates2.push(key);\n//                               cashData.push([cashResponse.data[key].cash]);\n//                             }\n\n//                             const cashValue1 = cashData.slice(0, 1);\n//                             const cashValue = cashValue1[0][0];\n//                             //console.log(\"Cash: \" + cashValue)\n\n//                             //---------------shortlongTermDebt + longTermDebt------------------//\n//                             //  const xyz2 = dates2.slice(0, 4);\n//                             //const SLTDValues = [];\n//                             const LTDValues = [];\n//                             // for (const key in debtData.data) {\n//                             //   //dates2.push(key);\n//                             //   SLTDValues.push([debtData.data[key].shortlongTermDebt]);\n//                             // }\n\n//                             for (const key in debtData.data) {\n//                               LTDValues.push([debtData.data[key].longTermDebt]);\n//                             }\n//                             // const debtSLTD = SLTDValues.slice(0, 1);\n//                             const debtLTD1 = LTDValues.slice(0, 1);\n//                             const debtLTD = debtLTD1[0][0];\n//                             //console.log(\"ShortTerm + LongTerm Debt: \" + debtSLTD);\n//                             //console.log(\"LongTerm Debt Only: \" + debtLTD);\n//                             // if (debtSLTD === \"undefined\" || null) {\n//                             // }\n//                             //---------------EBIT----------------------------------//\n//                             const dates = [];\n//                             const ebitValues = [];\n//                             for (const key in EbitResponse.data) {\n//                               dates.push(key);\n//                               ebitValues.push([EbitResponse.data[key].ebit]);\n//                             }\n\n//                             // const xyz = dates.slice(0, 1);\n//                             const EV = ebitValues.slice(0, 4);\n//                             var annualEbit = +EV[0] + +EV[1] + +EV[2] + +EV[3];\n//                             //console.log(\"Annual EBIT: \" + annualEbit)\n\n//                             //---------------Preferred Shares--------------------------------//\n//                             // const preferredValues = [];\n\n\n//                             // for (const key in preferredData.data) {\n//                             //   preferredValues.push([preferredData.data[key].preferredStockTotalEquity]);\n//                             // }\n//                             // // const debtSLTD = SLTDValues.slice(0, 1);\n//                             // const preferredSliced = preferredValues.slice(0, 1);\n//                             // var preferredStockTotalEquity = preferredSliced[0][0];\n//                             // if (preferredStockTotalEquity == null) {\n//                             //   preferredStockTotalEquity = 0;\n//                             // }\n//                             // if(value) {\n//                             //   preferredStockTotalEquity;\n//                             // }\n//                             //stockDataPackageQ12019[0].preferredStockTotalEquity\n//                             //Needs to go below stockDataFinal\n//                             // if (stockDataFinal[6] == null) {\n//                             //   stockDataFinal[6] = 0;\n//                             // }\n\n//                             //----------------Market Capitalization---------------------------//\n\n//                             // const MarketCapitalizationData = [];\n//                             // for (const key in MarketCapitalizationResponse.data) {\n//                             //   //dates2.push(key);\n//                             //   MarketCapitalizationData.push([MarketCapitalizationResponse.data[key].commonStock]);\n//                             // }\n//                             //const MarketCapitalization = MarketCapitalizationData.slice(0, 1);\n//                             var MarketCapitalization = MarketCapitalizationResponse.data;\n\n\n\n//                             console.log(\"----Stock data baybeee!-----\")\n//                             //console.log(\"----Array Len:\"+stockDataPackageQ12019.length+\"-----\")\n//                             //console.log(stockDataPackageQ12019[0].cashValue)\n\n//                             // stockDataFinal.push(\n//                             //   stockDataPackageQ12019[0].companyName,\n//                             //   stockDataPackageQ12019[0].cashValue,\n//                             //   stockDataPackageQ12019[0].debtLTD,\n//                             //   stockDataPackageQ12019[0].annualEbit,\n//                             //   stockDataPackageQ12019[0].MarketCapitalization,\n//                             //   stockDataPackageQ12019[0].stockPrice,\n\n//                             // )\n\n\n//                             console.log(companyName);\n//                             //console.log(typeof(companyName));\n\n\n//                             var enterpriseValue = [(+debtLTD + +MarketCapitalization) + +cashValue];\n//                             var symbol = stocks[i];\n//                             var finalRatioEvEbit = parseFloat((enterpriseValue / annualEbit)).toFixed(2);\n//                             console.log(\"EV/EBIT: \", finalRatioEvEbit);\n//                             console.log(annualEbit);\n\n//                             console.log(\"stockPrice: \", stockPrice);\n\n//                             db.Report.create({\n//                               companyName: companyName,\n//                               symbol: symbol,\n//                               stockPrice: stockPrice,\n//                               finalRatioEvEbit: finalRatioEvEbit\n\n//                             })\n//                             // .then(function (dbData) {\n//                             //   //console.log(dbData);\n//                             //  console.log(\"Hi World\")\n//                             // });\n\n//                           });\n//                       });\n//                   });\n//               });\n//           });\n//       });\n//   }\n// }"]},"metadata":{},"sourceType":"script"}