{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/Desktop/can-slim3/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Table from '../components/Table';\nimport stocks from \"../models/stockArray\";\nimport stockapi from \"../models/apiPull\";\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, \"Welcome to BitzPrice\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, \"Check current Stock Price, first test Aug 25\"), console.log(props.URLNamData), __jsx(Table, {\n  URLNameData: props.URLNameData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}), __jsx(Table, {\n  URLStockPriceData: props.URLStockPriceData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}), __jsx(Table, {\n  URLMarketCapitalizationData: props.URLMarketCapitalizationData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}), __jsx(Table, {\n  debtRatio: props.debtRatio,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n})));\n\nIndex.getInitialProps = async function () {\n  for (var i = 0; i < stocks.length; i++) {\n    const URLName = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\");\n    const URLNameData = await URLName.json();\n    const URLStockPrice = await Fetch(\"https://eodhistoricaldata.com/api/real-time/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&fmt=json&filter=close\");\n    const URLStockPriceData = await URLStockPrice.json();\n    const URLMarketCapitalization = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::MarketCapitalization\");\n    const URLMarketCapitalizationData = await URLMarketCapitalization.json();\n    const URLDebt = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\");\n    const URLDebtData = await URLDebt.json();\n    const URLEBITDA = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::EBITDA\");\n    const URLEBITDAData = await URLEBITDA.json(); //const debtRatio = URLDebtData/URLEBITDAData\n    //debt needs slicing to get value needed\n\n    const debtApiArraybyQuarters = [];\n\n    for (const key in URLDebt.data) {\n      debtApiArraybyQuarters.push([URLDebt.data[key].longTermDebtTotal]);\n    }\n\n    const sliceApiArray = debtApiArraybyQuarters.slice(0, 1);\n    const trueDebtValue = sliceApiArray[0][0];\n    return {\n      URLNameData: URLNameData,\n      URLStockPriceData: URLStockPriceData,\n      URLMarketCapitalizationData: URLMarketCapitalizationData,\n      debtRatio: trueDebtValue\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/pages/index.js"],"names":["Fetch","Layout","Table","stocks","stockapi","Index","props","console","log","URLNamData","URLNameData","URLStockPriceData","URLMarketCapitalizationData","debtRatio","getInitialProps","i","length","URLName","process","env","EOD_KEY","json","URLStockPrice","URLMarketCapitalization","URLDebt","URLDebtData","URLEBITDA","URLEBITDAData","debtApiArraybyQuarters","key","data","push","longTermDebtTotal","sliceApiArray","slice","trueDebtValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFF,EAIGC,OAAO,CAACC,GAAR,CAAaF,KAAK,CAACG,UAAnB,CAJH,EAKE,MAAC,KAAD;AAAO,EAAA,WAAW,EAAKH,KAAK,CAACI,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME,MAAC,KAAD;AAAO,EAAA,iBAAiB,EAAIJ,KAAK,CAACK,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOE,MAAC,KAAD;AAAO,EAAA,2BAA2B,EAAGL,KAAK,CAACM,2BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,EAQE,MAAC,KAAD;AAAO,EAAA,SAAS,EAAIN,KAAK,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CADF,CADF;;AAeAR,KAAK,CAACS,eAAN,GAAwB,kBAAiB;AACrC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AAC1C,UAAME,OAAO,GAAG,MAAMjB,KAAK,CAAC,oDAAoDG,MAAM,CAACY,CAAD,CAA1D,GAAgE,gBAAhE,GAAmFG,OAAO,CAACC,GAAR,CAAYC,OAA/F,GAAyG,uBAA1G,CAA3B;AACA,UAAMV,WAAW,GAAG,MAAMO,OAAO,CAACI,IAAR,EAA1B;AACA,UAAMC,aAAa,GAAG,MAAMtB,KAAK,CAAC,iDAAiDG,MAAM,CAACY,CAAD,CAAvD,GAA6D,gBAA7D,GAAgFG,OAAO,CAACC,GAAR,CAAYC,OAA5F,GAAsG,wBAAvG,CAAjC;AACA,UAAMT,iBAAiB,GAAG,MAAMW,aAAa,CAACD,IAAd,EAAhC;AACA,UAAME,uBAAuB,GAAG,MAAMvB,KAAK,CAAC,oDAAoDG,MAAM,CAACY,CAAD,CAA1D,GAAgE,gBAAhE,GAAmFG,OAAO,CAACC,GAAR,CAAYC,OAA/F,GAAyG,0CAA1G,CAA3C;AACA,UAAMR,2BAA2B,GAAG,MAAMW,uBAAuB,CAAEF,IAAzB,EAA1C;AACA,UAAMG,OAAO,GAAG,MAAMxB,KAAK,CAAC,oDAAoDG,MAAM,CAACY,CAAD,CAA1D,GAAgE,gBAAhE,GAAmFG,OAAO,CAACC,GAAR,CAAYC,OAA/F,GAAyG,8CAA1G,CAA3B;AAEA,UAAMK,WAAW,GAAG,MAAMD,OAAO,CAACH,IAAR,EAA1B;AACA,UAAMK,SAAS,GAAE,MAAM1B,KAAK,CAAC,oDAAoDG,MAAM,CAACY,CAAD,CAA1D,GAAgE,gBAAhE,GAAmFG,OAAO,CAACC,GAAR,CAAYC,OAA/F,GAAyG,4BAA1G,CAA5B;AACA,UAAMO,aAAa,GAAG,MAAMD,SAAS,CAACL,IAAV,EAA5B,CAX0C,CAY1C;AAEA;;AACA,UAAMO,sBAAsB,GAAI,EAAhC;;AACA,SAAK,MAAMC,GAAX,IAAkBL,OAAO,CAACM,IAA1B,EAAgC;AAC9BF,MAAAA,sBAAsB,CAACG,IAAvB,CAA4B,CAACP,OAAO,CAACM,IAAR,CAAaD,GAAb,EAAkBG,iBAAnB,CAA5B;AACD;;AACD,UAAMC,aAAa,GAAGL,sBAAsB,CAACM,KAAvB,CAA6B,CAA7B,EAA+B,CAA/B,CAAtB;AACA,UAAMC,aAAa,GAAGF,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAtB;AAEA,WAAO;AACLvB,MAAAA,WAAW,EAAEA,WADR;AAELC,MAAAA,iBAAiB,EAAEA,iBAFd;AAGLC,MAAAA,2BAA2B,EAAEA,2BAHxB;AAILC,MAAAA,SAAS,EAAEsB;AAJN,KAAP;AAOD;AAEA,CAhCD;;AAkCA,eAAe9B,KAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\n\nimport Table from '../components/Table';\nimport stocks from \"../models/stockArray\";\nimport stockapi from \"../models/apiPull\"\n\nconst Index = (props) => (\n  <Layout>\n    <div>\n      <h1>Welcome to BitzPrice</h1>\n      <p>Check current Stock Price, first test Aug 25</p>\n      \n      {console.log( props.URLNamData )}\n      <Table URLNameData = { props.URLNameData} />\n      <Table URLStockPriceData = {props.URLStockPriceData} />\n      <Table URLMarketCapitalizationData ={props.URLMarketCapitalizationData} />\n      <Table debtRatio = {props.debtRatio} />\n    </div>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    for (var i = 0; i < stocks.length; i++) {\n  const URLName = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=General::Name\");\n  const URLNameData = await URLName.json();\n  const URLStockPrice = await Fetch(\"https://eodhistoricaldata.com/api/real-time/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&fmt=json&filter=close\");\n  const URLStockPriceData = await URLStockPrice.json();\n  const URLMarketCapitalization = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::MarketCapitalization\");\n  const URLMarketCapitalizationData = await URLMarketCapitalization .json();\n  const URLDebt = await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Financials::Balance_Sheet::quarterly\");\n  \n  const URLDebtData = await URLDebt.json();\n  const URLEBITDA= await Fetch(\"https://eodhistoricaldata.com/api/fundamentals/\" + stocks[i] + \".US?api_token=\" + process.env.EOD_KEY + \"&filter=Highlights::EBITDA\");\n  const URLEBITDAData = await URLEBITDA.json();\n  //const debtRatio = URLDebtData/URLEBITDAData\n\n  //debt needs slicing to get value needed\n  const debtApiArraybyQuarters =  []\n  for (const key in URLDebt.data) {\n    debtApiArraybyQuarters.push([URLDebt.data[key].longTermDebtTotal])\n  }\n  const sliceApiArray = debtApiArraybyQuarters.slice(0,1)\n  const trueDebtValue = sliceApiArray[0][0];\n  \n  return {\n    URLNameData: URLNameData,\n    URLStockPriceData: URLStockPriceData,\n    URLMarketCapitalizationData: URLMarketCapitalizationData,\n    debtRatio: trueDebtValue\n\n  };\n}\n\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}