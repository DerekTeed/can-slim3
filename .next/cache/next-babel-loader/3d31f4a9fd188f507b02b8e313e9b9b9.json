{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nclass apiDB extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: 'apiDb application',\n      stocks: []\n    };\n  } //Make AJAX calls\n\n\n  componentDidMount() {\n    console.log('Component has Mounted');\n  }\n\n  addStock(event) {\n    var that = this;\n    event.preventDefault();\n    console.log('in method');\n    let stock_data = {\n      symbol: this.refs.symbol.value,\n      name: this.refs.name.value,\n      price: this.refs.price.value,\n      marketcap: this.refs.marketcap.value,\n      debt: this.refs.debt.value,\n      growth: this.refs.growth.value\n    };\n    var request = new Request('http://localhost:5000/api/newStock', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(stock_data)\n    }); //xmlhttprequest()\n\n    fetch(request).then(function (response) {\n      response.json().then(function (data) {});\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let title = this.state.title;\n    let stocks = this.state.stocks;\n    return __jsx(\"div\", {\n      className: \"apiDB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, title), __jsx(\"form\", {\n      ref: \"stockForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      ref: \"symbol\",\n      placeholder: \"symbol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"name\",\n      placeholder: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"price\",\n      placeholder: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"marketcap\",\n      placeholder: \"marketcap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"debt\",\n      placeholder: \"debt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"growth\",\n      placeholder: \"growth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      onClick: this.addStock.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \" Add Stock\"), __jsx(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, JSON.stringify(stocks))));\n  }\n\n}\n\nexport default apiDB;","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx"],"names":["React","Component","apiDB","constructor","state","title","stocks","componentDidMount","console","log","addStock","event","that","preventDefault","stock_data","symbol","refs","value","name","price","marketcap","debt","growth","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","data","catch","err","render","bind"],"mappings":"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","sourcesContent":["import Layout from '../../components/Layout'\nimport React, { Component } from 'react';\n\n\n\nclass apiDB extends Component {\n\n\n\n    constructor() {\n        super();\n        this.state = {\n            title: 'apiDb application',\n            stocks: []\n        }\n\n    }\n    //Make AJAX calls\n    componentDidMount() {\n        console.log('Component has Mounted')\n    }\n\n    addStock(event) {\n        var that = this;\n        event.preventDefault();\n        console.log('in method')\n        let stock_data = {\n            symbol: this.refs.symbol.value,\n            name: this.refs.name.value,\n            price: this.refs.price.value,\n            marketcap: this.refs.marketcap.value,\n            debt: this.refs.debt.value,\n            growth: this.refs.growth.value\n        };\n        var request = new Request('http://localhost:5000/api/newStock', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(stock_data)\n        });\n        //xmlhttprequest()\n        fetch(request)\n            .then(function (response) {\n                \n                response.json()\n                    .then(function (data) {\n                       \n                    })\n\n            })\n            .catch(function (err) {\n                console.log(err)\n            })\n    }\n\n    render() {\n        let title = this.state.title;\n        let stocks = this.state.stocks\n        return (\n            <div className=\"apiDB\">\n                <h1>{title}</h1>\n                <form ref=\"stockForm\">\n                    <input type=\"text\" ref=\"symbol\" placeholder=\"symbol\" />\n                    <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n                    <input type=\"text\" ref=\"price\" placeholder=\"price\" />\n                    <input type=\"text\" ref=\"marketcap\" placeholder=\"marketcap\" />\n                    <input type=\"text\" ref=\"debt\" placeholder=\"debt\" />\n                    <input type=\"text\" ref=\"growth\" placeholder=\"growth\" />\n                    <button onClick={this.addStock.bind(this)}> Add Stock</button>\n                    <pre>{JSON.stringify(stocks)}</pre>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default apiDB;"]},"metadata":{},"sourceType":"module"}