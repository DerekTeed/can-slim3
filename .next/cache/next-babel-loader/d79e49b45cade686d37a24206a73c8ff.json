{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nclass apiDB extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: 'apiDb application',\n      stocks: []\n    };\n  } //Make AJAX calls\n\n\n  componentDidMount() {\n    let that = this;\n    console.log('Component has Mounted');\n    fetch('http://localhost:5000/api/pullfromDBstocks').then(function (response) {\n      response.json().then(function (data) {\n        that.setState({\n          stocks: data\n        });\n      });\n    });\n  }\n\n  removeStocks(id) {\n    var that = this; //this is using stocks from let stocks = this.state.stocks in render()\n\n    let stocks = this.state.stocks;\n    let stock3 = stocks.find(function (stock3) {\n      //by matching them we match the id in which to delete on the button click\n      return stock3.id === id;\n    });\n    var request = new Request('http://localhost:5000/api/removeStock/' + id, {\n      method: 'DELETE'\n    });\n    fetch(request).then(function (response) {\n      stocks.splice(stock3.indexOf(stock3), 1);\n      that.setState({\n        stocks: stocks\n      });\n      response.json().then(function (data) {\n        console.log(that);\n      });\n    });\n  }\n\n  addStock(event) {\n    var that = this;\n    event.preventDefault();\n    console.log('in method');\n    let stock_data = {\n      // id: this.refs.id.value,\n      symbol: this.refs.symbol.value,\n      name: this.refs.name.value,\n      price: this.refs.price.value,\n      marketcap: this.refs.marketcap.value,\n      debt: this.refs.debt.value,\n      growth: this.refs.growth.value\n    };\n    var request = new Request('http://localhost:5000/api/newStock', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(stock_data)\n    });\n    let stocks = that.state.stocks;\n    stocks.push(stock_data); //stocks.concat(stock_data);\n\n    that.setState({\n      stocks: stocks\n    }); //xmlhttprequest()\n\n    fetch(request).then(function (response) {\n      response.json().then(function (data) {});\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let title = this.state.title;\n    let stocks = this.state.stocks;\n    return __jsx(\"div\", {\n      className: \"apiDB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, title), __jsx(\"form\", {\n      ref: \"stockForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      ref: \"symbol\",\n      placeholder: \"symbol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"name\",\n      placeholder: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"price\",\n      placeholder: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"marketcap\",\n      placeholder: \"marketcap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"debt\",\n      placeholder: \"debt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), __jsx(\"input\", {\n      type: \"text\",\n      ref: \"growth\",\n      placeholder: \"growth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      onClick: this.addStock.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \" Add Stock\")), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, stocks.map(indStocks => __jsx(\"li\", {\n      key: indStocks.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 46\n      }\n    }, indStocks.symbol, \" \", indStocks.name, \" \", indStocks.price, \" \", indStocks.marketcap, \" \", indStocks.debt, indStocks.growth, \" \", __jsx(\"button\", {\n      onClick: this.removeStocks.bind(this, indStocks.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 180\n      }\n    }, \"Remove\")))));\n  }\n\n}\n\nexport default apiDB;","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx"],"names":["React","Component","apiDB","constructor","state","title","stocks","componentDidMount","that","console","log","fetch","then","response","json","data","setState","removeStocks","id","stock3","find","request","Request","method","splice","indexOf","addStock","event","preventDefault","stock_data","symbol","refs","value","name","price","marketcap","debt","growth","headers","Headers","body","JSON","stringify","push","catch","err","render","bind","map","indStocks"],"mappings":"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","sourcesContent":["import Layout from '../../components/Layout'\nimport React, { Component } from 'react';\n\n\n\nclass apiDB extends Component {\n\n\n\n    constructor() {\n        super();\n        this.state = {\n            title: 'apiDb application',\n            stocks: []\n        }\n\n    }\n    //Make AJAX calls\n    componentDidMount() {\n        let that = this;\n        console.log('Component has Mounted')\n        fetch('http://localhost:5000/api/pullfromDBstocks')\n            .then(function(response) {\n                response.json()\n                    .then(function(data) {\n                        that.setState( {\n                            stocks: data\n                        })\n                    })\n            })\n    }\n    \n    removeStocks(id) {\n        var that = this;\n        //this is using stocks from let stocks = this.state.stocks in render()\n        let stocks = this.state.stocks;\n        let stock3 = stocks.find(function(stock3) {\n            //by matching them we match the id in which to delete on the button click\n            return stock3.id === id\n        });\n        var request = new Request('http://localhost:5000/api/removeStock/'+ id, {\n            method: 'DELETE'\n        });\n        fetch(request)\n            .then(function(response) {\n                stocks.splice(stock3.indexOf(stock3), 1);\n                that.setState({\n                    stocks: stocks\n                })\n                response.json()\n                    .then(function(data) {\n                        console.log(that)\n                    })\n            })\n    }\n\n\n    addStock(event) {\n        var that = this;\n        event.preventDefault();\n        console.log('in method')\n        let stock_data = {\n           // id: this.refs.id.value,\n            symbol: this.refs.symbol.value,\n            name: this.refs.name.value,\n            price: this.refs.price.value,\n            marketcap: this.refs.marketcap.value,\n            debt: this.refs.debt.value,\n            growth: this.refs.growth.value\n        };\n        var request = new Request('http://localhost:5000/api/newStock', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(stock_data)\n        });\n\n        let stocks = that.state.stocks;\n        stocks.push(stock_data)\n        //stocks.concat(stock_data);\n        that.setState({\n            stocks: stocks\n        })\n        //xmlhttprequest()\n        fetch(request)\n            .then(function (response) {\n\n                response.json()\n                    .then(function (data) {\n\n                    })\n\n            })\n            .catch(function (err) {\n                console.log(err)\n            })\n    }\n\n    render() {\n        let title = this.state.title;\n        let stocks = this.state.stocks\n        return (\n            <div className=\"apiDB\">\n                <h1>{title}</h1>\n                <form ref=\"stockForm\">\n                    \n                    <input type=\"text\" ref=\"symbol\" placeholder=\"symbol\" />\n                    <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n                    <input type=\"text\" ref=\"price\" placeholder=\"price\" />\n                    <input type=\"text\" ref=\"marketcap\" placeholder=\"marketcap\" />\n                    <input type=\"text\" ref=\"debt\" placeholder=\"debt\" />\n                    <input type=\"text\" ref=\"growth\" placeholder=\"growth\" />\n                    <button onClick={this.addStock.bind(this)}> Add Stock</button>\n                </form>\n                <ul>\n                    {stocks.map(indStocks => <li key={indStocks.id}>{indStocks.symbol} {indStocks.name} {indStocks.price} {indStocks.marketcap} {indStocks.debt}{indStocks.growth} <button onClick= {this.removeStocks.bind(this, indStocks.id)}>Remove</button></li>)}\n                   \n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default apiDB;"]},"metadata":{},"sourceType":"module"}