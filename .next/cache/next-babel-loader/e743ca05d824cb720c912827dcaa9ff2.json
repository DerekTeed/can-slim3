{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar apiDB = /*#__PURE__*/function (_Component) {\n  _inherits(apiDB, _Component);\n\n  var _super = _createSuper(apiDB);\n\n  function apiDB() {\n    var _this;\n\n    _classCallCheck(this, apiDB);\n\n    _this = _super.call(this);\n    _this.state = {\n      title: 'apiDb application',\n      stocks: []\n    };\n    return _this;\n  } //Make AJAX calls\n\n\n  _createClass(apiDB, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      console.log('Component has Mounted');\n      fetch('http://localhost:5000/api/stocks').then(function (response) {\n        response.json().then(function (data) {\n          that.setState({\n            stocks: data\n          });\n        });\n      });\n    }\n  }, {\n    key: \"addStock\",\n    value: function addStock(event) {\n      var that = this;\n      event.preventDefault();\n      console.log('in method');\n      var stock_data = {\n        id: this.refs.id.value,\n        symbol: this.refs.symbol.value,\n        name: this.refs.name.value,\n        price: this.refs.price.value,\n        marketcap: this.refs.marketcap.value,\n        debt: this.refs.debt.value,\n        growth: this.refs.growth.value\n      };\n      var request = new Request('http://localhost:5000/api/newStock', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(stock_data)\n      });\n      var stocks = that.state.stocks;\n      stocks.push(stock_data); //stocks.concat(stock_data);\n\n      that.setState({\n        stocks: stocks\n      }); //xmlhttprequest()\n\n      fetch(request).then(function (response) {\n        response.json().then(function (data) {});\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var title = this.state.title;\n      var stocks = this.state.stocks;\n      return __jsx(\"div\", {\n        className: \"apiDB\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, title), __jsx(\"form\", {\n        ref: \"stockForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        ref: \"id\",\n        placeholder: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"symbol\",\n        placeholder: \"symbol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"name\",\n        placeholder: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"price\",\n        placeholder: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"marketcap\",\n        placeholder: \"marketcap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"debt\",\n        placeholder: \"debt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }), __jsx(\"input\", {\n        type: \"text\",\n        ref: \"growth\",\n        placeholder: \"growth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), __jsx(\"button\", {\n        onClick: this.addStock.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \" Add Stock\")), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, stocks.map(function (indStocks) {\n        return __jsx(\"li\", {\n          key: stocks.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 46\n          }\n        }, indStocks.symbol, \" \", indStocks.name, \" \", indStocks.price, \" \", indStocks.marketcap, \" \", indStocks.debt, indStocks.growth);\n      })));\n    }\n  }]);\n\n  return apiDB;\n}(Component);\n\nexport default apiDB;","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/src/pages/apiDB.tsx"],"names":["React","Component","apiDB","state","title","stocks","that","console","log","fetch","then","response","json","data","setState","event","preventDefault","stock_data","id","refs","value","symbol","name","price","marketcap","debt","growth","request","Request","method","headers","Headers","body","JSON","stringify","push","err","addStock","bind","map","indStocks"],"mappings":"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","sourcesContent":["import Layout from '../../components/Layout'\nimport React, { Component } from 'react';\n\n\n\nclass apiDB extends Component {\n\n\n\n    constructor() {\n        super();\n        this.state = {\n            title: 'apiDb application',\n            stocks: []\n        }\n\n    }\n    //Make AJAX calls\n    componentDidMount() {\n        let that = this;\n        console.log('Component has Mounted')\n        fetch('http://localhost:5000/api/stocks')\n            .then(function(response) {\n                response.json()\n                    .then(function(data) {\n                        that.setState( {\n                            stocks: data\n                        })\n                    })\n            })\n    }\n\n    addStock(event) {\n        var that = this;\n        event.preventDefault();\n        console.log('in method')\n        let stock_data = {\n            id: this.refs.id.value,\n            symbol: this.refs.symbol.value,\n            name: this.refs.name.value,\n            price: this.refs.price.value,\n            marketcap: this.refs.marketcap.value,\n            debt: this.refs.debt.value,\n            growth: this.refs.growth.value\n        };\n        var request = new Request('http://localhost:5000/api/newStock', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(stock_data)\n        });\n\n        let stocks = that.state.stocks;\n        stocks.push(stock_data)\n        //stocks.concat(stock_data);\n        that.setState({\n            stocks: stocks\n        })\n        //xmlhttprequest()\n        fetch(request)\n            .then(function (response) {\n\n                response.json()\n                    .then(function (data) {\n\n                    })\n\n            })\n            .catch(function (err) {\n                console.log(err)\n            })\n    }\n\n    render() {\n        let title = this.state.title;\n        let stocks = this.state.stocks\n        return (\n            <div className=\"apiDB\">\n                <h1>{title}</h1>\n                <form ref=\"stockForm\">\n                    <input type=\"text\" ref=\"id\" placeholder=\"id\" />\n                    <input type=\"text\" ref=\"symbol\" placeholder=\"symbol\" />\n                    <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n                    <input type=\"text\" ref=\"price\" placeholder=\"price\" />\n                    <input type=\"text\" ref=\"marketcap\" placeholder=\"marketcap\" />\n                    <input type=\"text\" ref=\"debt\" placeholder=\"debt\" />\n                    <input type=\"text\" ref=\"growth\" placeholder=\"growth\" />\n                    <button onClick={this.addStock.bind(this)}> Add Stock</button>\n                </form>\n                <ul>\n                    {stocks.map(indStocks => <li key={stocks.id}>{indStocks.symbol} {indStocks.name} {indStocks.price} {indStocks.marketcap} {indStocks.debt}{indStocks.growth}</li>)}\n                   \n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default apiDB;"]},"metadata":{},"sourceType":"module"}