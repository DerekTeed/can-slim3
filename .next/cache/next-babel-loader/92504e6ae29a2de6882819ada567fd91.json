{"ast":null,"code":"var _jsxFileName = \"/Users/Derek/Desktop/can-slim3/pages/api/contact.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch'; // posts will be populated at build time by getStaticProps()\n\nfunction Blog({\n  posts\n}) {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, posts.map(post => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, post.title)));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await Fetch('https://jsonplaceholder.typicode.com/todos');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["/Users/Derek/Desktop/can-slim3/pages/api/contact.js"],"names":["Fetch","Blog","posts","map","post","title","getStaticProps","res","json","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAErB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CADD,CADH,CADF;AAOD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAME,KAAK,GAAG,MAAMK,GAAG,CAACC,IAAJ,EAApB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLP,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\n// posts will be populated at build time by getStaticProps()\nfunction Blog({ posts }) {\n    \n    return (\n      <ul>\n        {posts.map((post) => (\n          <li>{post.title}</li>\n        ))}\n      </ul>\n    )\n  }\n  \n  // This function gets called at build time on server-side.\n  // It won't be called on client-side, so you can even do\n  // direct database queries. See the \"Technical details\" section.\n  export async function getStaticProps() {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await Fetch('https://jsonplaceholder.typicode.com/todos')\n    const posts = await res.json()\n  \n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n      props: {\n        posts,\n      },\n    }\n  }\n  \n  export default Blog"]},"metadata":{},"sourceType":"module"}